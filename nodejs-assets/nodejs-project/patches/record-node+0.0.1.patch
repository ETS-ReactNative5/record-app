patch-package
--- a/node_modules/record-node/components/contacts.js
+++ b/node_modules/record-node/components/contacts.js
@@ -41,8 +41,8 @@ module.exports = function contacts (self) {
       const entry = await self.contacts.getEntry(logId, contactId)
       const relations = await self.contacts.getRelations(entry)
       const profile = await self.profile.getEntry(entry.content.address)
-      const content = { ...profile.content, ...entry.content }
-      return { ...relations, ...entry, content }
+      const content = Object.assign({}, profile.content, entry.content)
+      return Object.assign({}, relations, entry, { content })
     },

     getRelations: async (contact, opts = {}) => {
@@ -80,8 +80,8 @@ module.exports = function contacts (self) {
       for (const entry of entries) {
         const profile = await self.profile.getEntry(entry.payload.value.content.address)
         const relations = await self.contacts.getRelations(entry.payload.value)
-        const content = { ...profile.content, ...entry.content }
-        contacts.push({ ...relations, ...entry.payload.value, content })
+        const content = Object.assign({}, profile.content, entry.content)
+        contacts.push(Object.assign({}, relations, entry.payload.value, { content }))
       }
       return contacts
     }
--- a/node_modules/record-node/components/feed.js
+++ b/node_modules/record-node/components/feed.js
@@ -33,11 +33,10 @@ module.exports = function feed (self) {
         const { type } = feedEntry.payload
         // TODO: make this readable and less suspect :(
         const entry = await self[`${type}s`].get(address, feedEntry.payload.entryId)
-        entries.push({
-          ...feedEntry.payload,
-          contact: contact,
-          content: entry
-        })
+        entries.push(Object.assign({},
+          feedEntry.payload,
+          { contact: contact, content: entry }
+        ))
       }
       return entries
     }
--- a/node_modules/record-node/components/profile.js
+++ b/node_modules/record-node/components/profile.js
@@ -28,14 +28,14 @@ module.exports = function profile (self) {

       if (self.isMe(logId)) {
         entry.content.address = self.address
-        return { ...entry, isMe: true, haveContact: false }
+        return Object.assign({}, entry, { isMe: true }, { haveContact: false }, { content: { address: self.address }})
       }

       const contact = await self.contacts.get(self.address, entry._id)
       const relations = await self.contacts.getRelations(contact)
-      const content = { ...entry.content, ...contact.content }
+      const content = Object.assign({}, entry.content, contact.content)

-      return { ...relations, ...contact, content }
+      return Object.assign({}, relations, contact, { content })
     }
   }
 }
